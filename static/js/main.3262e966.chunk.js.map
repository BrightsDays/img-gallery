{"version":3,"sources":["components/App/App.js","index.js"],"names":["Main","useState","names","setNames","url","setUrl","loadText","setLoadText","LoadList","data","className","map","item","index","onClick","filter","src","alt","TextField","id","label","onChange","e","target","value","Button","variant","color","component","preventDefault","source","match","img","Image","onload","console","log","concat","fetch","method","then","res","json","galleryImages","addItem","onDragStart","onDragLeave","onDragOver","onDrop","files","dataTransfer","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAmFeA,EA/EF,WAAO,IAAD,EACSC,mBAAS,MADlB,mBACVC,EADU,KACHC,EADG,OAEKF,mBAAS,MAFd,mBAEVG,EAFU,KAELC,EAFK,OAGeJ,mBAAS,6HAHxB,mBAGVK,EAHU,KAGAC,EAHA,KAKXC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACI,oBAAIC,UAAU,eAAd,SACKD,GACDA,EAAKE,KAAI,SAACC,EAAMC,GAAP,OACL,qBAAIH,UAAU,qBAAd,UAEI,wBAAQA,UAAU,sBACVI,QAAS,kBAAMX,EAASD,EAAMa,QAAO,SAAAH,GAAI,OAAIA,IAASV,EAAMW,QADpE,eAEA,qBAAKH,UAAU,gDACVM,IAAKJ,EAAKR,IACVa,IAAI,YALJJ,SA0CzB,OACI,sBAAKH,UAAU,UAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,cAACQ,EAAA,EAAD,CAAWR,UAAU,wBACdS,GAAG,iBACHC,MAAM,+GACNC,SAAU,SAAAC,GAAC,OAAIjB,EAAOiB,EAAEC,OAAOC,UACtC,cAACC,EAAA,EAAD,CAAQf,UAAU,yBACVgB,QAAQ,YACRC,MAAM,UACNC,UAAU,OACVd,QAAS,SAAAQ,GACLA,EAAEO,iBA1CV,SAAAC,GACZ,GAAIA,GAAUA,EAAOC,MAAM,2BAA4B,CACnD,IAAMC,EAAM,IAAIC,MAChBD,EAAIhB,IAAMc,EACVE,EAAIE,OAAS,WACTC,QAAQC,IAAI,CAAC,CAAC,IAAON,KAGrB3B,EAFCD,EAEQ,CAAC,CAAC,IAAO4B,IAASO,OAAOnC,GADzB,CAAC,CAAC,IAAO4B,WAGfA,GAAUA,EAAOC,MAAM,eAG9BO,MAAMR,EAFW,CAAES,OAAQ,QAGtBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACE,GAGHvC,EAFCD,EAESwC,EAAKC,cAAeN,OAAOnC,GAD5BwC,EAAKC,kBA0BNC,CAAQxC,IANpB,uEASJ,qBAAKM,UAAU,eACVmC,YAAa,SAAAvB,GAAC,OAAIA,EAAEO,kBACpBiB,YAAa,SAAAxB,GAAC,OAAIA,EAAEO,kBACpBkB,WAAY,SAAAzB,GAAC,OAAIA,EAAEO,kBACnBmB,OAAQ,SAAA1B,GAAC,OA3BP,SAACA,GACZA,EAAEO,iBACF,IAAIoB,EAAK,YAAO3B,EAAE4B,aAAaD,OAC/Bd,QAAQC,IAAIa,GACZ1C,EAAY,GAAD,OAAI0C,EAAM,GAAGE,KAAb,4TAuBWH,CAAO1B,IAJzB,SAI8BhB,IAC9B,cAACE,EAAD,CAAUC,KAAMP,QCvE1BkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3262e966.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './App.sass';\n\nconst Main = () => {\n  const [names, setNames] = useState(null);\n  const [url, setUrl] = useState(null);\n  const [loadText, setLoadText] = useState('Загрузить изображение');\n\n  const LoadList = ({ data }) => {\n      return(\n          <ul className=\"gallery-list\">\n              {data &&\n              data.map((item, index) => (\n                  <li className=\"gallery-list__item\"\n                      key={index}>\n                      <button className=\"gallery-list__close\"\n                              onClick={() => setNames(names.filter(item => item !== names[index]))}>X</button>\n                      <img className=\"gallery-list__image gallery-list__image--poly\"\n                           src={item.url}\n                           alt=\"Image\"/>\n                  </li>\n              ))}\n          </ul>\n      );\n  };\n\n  const addItem = source => {\n      if (source && source.match(/\\.(jpe?g|png|gif|bmp)$/i)) {\n          const img = new Image();\n          img.src = source;\n          img.onload = () => {\n              console.log([{'url': source}])\n              !names ?\n              setNames([{'url': source}]) :\n              setNames([{'url': source}].concat(names));\n          };\n      } else if (source && source.match(/\\.(json)$/i)) {\n          const settings = { method: \"Get\" };\n\n          fetch(source, settings)\n              .then(res => res.json())\n              .then((json) => {\n                  !names ?\n                  setNames(json.galleryImages) :\n                  setNames((json.galleryImages).concat(names));\n              });\n      }\n  };\n\n  const onDrop = (e) => {\n      e.preventDefault();\n      let files = [...e.dataTransfer.files];\n      console.log(files)\n      setLoadText(`${files[0].name} загружен, но добавить его в галерею без сервера не получится`);\n  }\n\n  return(\n      <div className=\"gallery\">\n          <div className=\"gallery-header\">\n              <TextField className=\"gallery-header__input\"\n                     id=\"standard-basic\"\n                     label=\"введите url-адрес файла\"\n                     onChange={e => setUrl(e.target.value)}/>\n              <Button className=\"gallery-header__upload\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      component=\"span\"\n                      onClick={e => {\n                          e.preventDefault();\n                          addItem(url);\n                      }}>Загрузить</Button>\n          </div>\n          <div className=\"gallery-drop\"\n               onDragStart={e => e.preventDefault()}\n               onDragLeave={e => e.preventDefault()}\n               onDragOver={e => e.preventDefault()}\n               onDrop={e => onDrop(e)}>{loadText}</div>\n          <LoadList data={names}/>\n      </div>\n  );\n};\n\nexport default Main;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}