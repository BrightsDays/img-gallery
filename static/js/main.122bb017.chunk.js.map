{"version":3,"sources":["components/App/App.js","index.js"],"names":["Main","useState","names","setNames","url","setUrl","LoadList","data","className","map","item","index","onClick","filter","src","alt","addItems","source","match","img","Image","onload","concat","fetch","method","then","res","json","galleryImages","TextField","id","label","onChange","e","target","value","Button","variant","color","component","preventDefault","type","files","reader","FileReader","r","result","readAsDataURL","onDrop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA6FeA,EAzFF,WAAO,IAAD,EACSC,mBAAS,MADlB,mBACVC,EADU,KACHC,EADG,OAEKF,mBAAS,MAFd,mBAEVG,EAFU,KAELC,EAFK,KAIXC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACI,oBAAIC,UAAU,eAAd,SACKD,GACDA,EAAKE,KAAI,SAACC,EAAMC,GAAP,OACL,qBAAIH,UAAU,qBAAd,UAEI,wBAAQA,UAAU,sBACVI,QAAS,kBAAMT,EAASD,EAAMW,QAAO,SAAAH,GAAI,OAAIA,IAASR,EAAMS,QADpE,eAEA,qBAAKH,UAAU,gDACVM,IAAKJ,EAAKN,IACVW,IAAI,YALJJ,SAYnBK,EAAW,SAAAC,GACb,GAAIA,GAAUA,EAAOC,MAAM,2BAA4B,CACnD,IAAMC,EAAM,IAAIC,MAChBD,EAAIL,IAAMG,EACVE,EAAIE,OAAS,WAGTlB,EAFCD,EAEQ,CAAC,CAAC,IAAOe,IAASK,OAAOpB,GADzB,CAAC,CAAC,IAAOe,WAGnB,GAAIA,GAAUA,EAAOC,MAAM,cAAe,CAG7CK,MAAMN,EAFW,CAAEO,OAAQ,QAGtBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACE,GAGHxB,EAFCD,EAESyB,EAAKC,cAAeN,OAAOpB,GAD5ByB,EAAKC,oBAwB9B,OAFK1B,GAAOc,EAAS,+EAGjB,sBAAKR,UAAU,UAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,cAACqB,EAAA,EAAD,CAAWrB,UAAU,wBACdsB,GAAG,iBACHC,MAAM,+GACNC,SAAU,SAAAC,GAAC,OAAI5B,EAAO4B,EAAEC,OAAOC,UACtC,cAACC,EAAA,EAAD,CAAQ5B,UAAU,yBACV6B,QAAQ,YACRC,MAAM,UACNC,UAAU,OACV3B,QAAS,SAAAqB,GACLA,EAAEO,iBACFxB,EAASZ,IANrB,uEASJ,sBAAKI,UAAU,eAAf,UACI,mBAAGA,UAAU,qBAAb,+IACA,uBAAOA,UAAU,sBACViC,KAAK,OACLT,SAAU,SAAAC,GAAC,OAtCf,SAAAA,GACX,IAAIS,EAAQT,EAAEC,OAAOQ,MACjBC,EAAS,IAAIC,WAEjBD,EAAOtB,OAAS,SAAAwB,GAGZ1C,EAFCD,EAEQ,CAAC,CAAC,IAAO2C,EAAEX,OAAOY,SAASxB,OAAOpB,GADlC,CAAC,CAAC,IAAO2C,EAAEX,OAAOY,UAE3BD,EAAEX,OAAOC,MAAQ,IAGjBO,EAAM,IACNC,EAAOI,cAAcL,EAAM,IA0BDM,CAAOf,SAEjC,cAAC3B,EAAD,CAAUC,KAAML,QCjF1B+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.122bb017.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './App.sass';\n\nconst Main = () => {\n  const [names, setNames] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  const LoadList = ({ data }) => {\n      return(\n          <ul className=\"gallery-list\">\n              {data &&\n              data.map((item, index) => (\n                  <li className=\"gallery-list__item\"\n                      key={index}>\n                      <button className=\"gallery-list__close\"\n                              onClick={() => setNames(names.filter(item => item !== names[index]))}>X</button>\n                      <img className=\"gallery-list__image gallery-list__image--poly\"\n                           src={item.url}\n                           alt=\"Image\"/>\n                  </li>\n              ))}\n          </ul>\n      );\n  };\n\n  const addItems = source => {\n      if (source && source.match(/\\.(jpe?g|png|gif|bmp)$/i)) {\n          const img = new Image();\n          img.src = source;\n          img.onload = () => {\n              !names ?\n              setNames([{'url': source}]) :\n              setNames([{'url': source}].concat(names));\n          };\n      } else if (source && source.match(/\\.(json)$/i)) {\n          const settings = { method: \"Get\" };\n\n          fetch(source, settings)\n              .then(res => res.json())\n              .then((json) => {\n                  !names ?\n                  setNames(json.galleryImages) :\n                  setNames((json.galleryImages).concat(names));\n              });\n      }\n  };\n\n  const onDrop = e => {\n      let files = e.target.files;\n      let reader = new FileReader();\n\n      reader.onload = r => {\n          !names ?\n          setNames([{'url': r.target.result}]) :\n          setNames([{'url': r.target.result}].concat(names))\n          r.target.value = '';\n      };\n\n      if (files[0]) {\n          reader.readAsDataURL(files[0]);\n      }\n  }\n\n  if (!names) addItems('https://don16obqbay2c.cloudfront.net/frontend-test-task/gallery-images.json');\n\n  return(\n      <div className=\"gallery\">\n          <div className=\"gallery-header\">\n              <TextField className=\"gallery-header__input\"\n                     id=\"standard-basic\"\n                     label=\"введите url-адрес файла\"\n                     onChange={e => setUrl(e.target.value)}/>\n              <Button className=\"gallery-header__upload\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      component=\"span\"\n                      onClick={e => {\n                          e.preventDefault();\n                          addItems(url);\n                      }}>Загрузить</Button>\n          </div>\n          <div className=\"gallery-drop\">\n              <p className=\"gallery-drop__info\">или перетащите файл сюда</p>\n              <input className=\"gallery-drop__input\"\n                     type=\"file\"\n                     onChange={e => onDrop(e)} />\n          </div>\n          <LoadList data={names}/>\n      </div>\n  );\n};\n\nexport default Main;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}